- name: Install pyenv dependencies
  apt:
    name:
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - curl
      - llvm
      - libncurses5-dev
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev
      - git
      - bash
    update_cache: yes
  become: true

- name: Check if pyenv directory exists
  stat:
    path: "{{ pyenv_dir }}"
  register: check_pyenv_dir

- name: Setup pyenv path
  shell: |
    echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
    echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
    echo 'eval "$(pyenv init --path)"' >> ~/.bashrc
    echo 'eval "$(pyenv init -)"' >> ~/.bashrc
  when: not check_pyenv_dir.stat.exists

- name: Clone pyenv repository
  git:
    repo: "https://github.com/pyenv/pyenv.git"
    dest: "{{ pyenv_dir }}"
    version: "master"
    update: no
  register: pyenv_installed

- name: Compile dynamic bash extension
  shell: cd ~/.pyenv && src/configure && make -C src && cd -
  when: pyenv_installed

- name: Check pyenv global
  command: "{{ pyenv }} global"
  register: check_pyenv_global
  when: pyenv_installed

- name: Install python via pyenv
  shell: |
    "{{ pyenv }}" install "{{ python_ver_to_install }}"
    "{{ pyenv }}" global "{{ python_ver_to_install }}"
  when: check_pyenv_global.stdout != python_ver_to_install

- name: Check if pyenv-virtualenv directory exists
  stat:
    path: "{{ pyenv_virtualenv_dir }}"
  register: check_pyenv_virtualenv_dir

- name: Setup pyenv-virtualenv path
  shell: echo 'eval "$(pyenv virtualenv-init -)"' >> ~/.bashrc
  when: not check_pyenv_virtualenv_dir.stat.exists

- name: Clone pyenv-virtualenv repository
  git:
    repo: "https://github.com/pyenv/pyenv-virtualenv.git"
    dest: "{{ pyenv_virtualenv_dir }}"
    version: "master"
    update: no
